<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nemiro.Convertion</name>
    </assembly>
    <members>
        <member name="T:Nemiro.Convertion">
            <summary>
            Converts a data type to another data type.
            </summary>
            <remarks>
            <para>This class provides a type conversion without incurring exceptions.</para>
            <para><see cref="T:System.DBNull"/> values ​​are treated as <c>null</c>.</para>
            <para>For floating-point numbers can be specified point or comma.</para>
            <para>To obtain the date, you can specify the format in which it is presented.</para>
            </remarks>
            <example>
            <code lang="C#">
            Console.WriteLine("1.  {0}", Convertion.ToInt32("  123,456  "));
            Console.WriteLine("2.  {0}", Convertion.ToInt32("28.01"));
            Console.WriteLine("3.  {0}", Convertion.ToInt32(DBNull.Value));
            Console.WriteLine("4.  {0}", Convertion.ToInt32(DBNull.Value, 555));
            Console.WriteLine("5.  {0}", Convertion.ToDouble("  123,456  "));
            Console.WriteLine("6.  {0}", Convertion.ToDouble("28.01"));
            Console.WriteLine("7.  {0}", Convertion.ToBoolean("true"));
            Console.WriteLine("8.  {0}", Convertion.ToBoolean("false"));
            Console.WriteLine("9.  {0}", Convertion.ToBoolean("1"));
            Console.WriteLine("10. {0}", Convertion.ToBoolean("0"));
            Console.WriteLine("11. {0}", Convertion.ToBoolean("   123      "));
            Console.WriteLine("12. {0}", Convertion.ToDateTime("31.12.1980", "dd.MM.yyyy"));
            Console.WriteLine("13. {0}", Convertion.ToDateTime("12/31/1980", "MM/dd/yyyy"));
            Console.WriteLine("14. {0}", Convertion.ToDateTime("23:59:01"));
            Console.WriteLine("15. {0}", Convertion.ToDateTime(DBNull.Value));
            Console.WriteLine("16. {0}", Convertion.ToDateTime(DBNull.Value, DateTime.Now));
            Console.WriteLine("17. {0}", Convertion.ToBase16(16));
            Console.WriteLine("18. {0}", Convertion.FromBase16("10"));
            Console.WriteLine("19. {0}", Convertion.ToBase16(123123));
            Console.WriteLine("20. {0}", Convertion.FromBase16("AF01"));
            Console.WriteLine("21. {0}", Convertion.ToBase36(36));
            Console.WriteLine("22. {0}", Convertion.FromBase36("10"));
            Console.WriteLine("23. {0}", Convertion.ToBase36(123123));
            Console.WriteLine("24. {0}", Convertion.FromBase36("ZYR1"));
            Console.WriteLine("25. {0}", Convertion.ToBase62(62));
            Console.WriteLine("26. {0}", Convertion.FromBase62("10"));
            Console.WriteLine("27. {0}", Convertion.ToBase62(123123));
            Console.WriteLine("28. {0}", Convertion.FromBase62("Nemiro"));
            Console.WriteLine("29. {0}", Convertion.ToBase62(45102691578));
            Console.WriteLine("30. {0}", Convertion.ToTimeSpan("12:10:59"));
            Console.WriteLine("31. {0}", Convertion.ToTimeSpan(635456955015215351));
            </code>
            <code lang="VB">
            Console.WriteLine("1.  {0}", Convertion.ToInt32("  123,456  "))
            Console.WriteLine("2.  {0}", Convertion.ToInt32("28.01"))
            Console.WriteLine("3.  {0}", Convertion.ToInt32(DBNull.Value))
            Console.WriteLine("4.  {0}", Convertion.ToInt32(DBNull.Value, 555))
            Console.WriteLine("5.  {0}", Convertion.ToDouble("  123,456  "))
            Console.WriteLine("6.  {0}", Convertion.ToDouble("28.01"))
            Console.WriteLine("7.  {0}", Convertion.ToBoolean("true"))
            Console.WriteLine("8.  {0}", Convertion.ToBoolean("false"))
            Console.WriteLine("9.  {0}", Convertion.ToBoolean("1"))
            Console.WriteLine("10. {0}", Convertion.ToBoolean("0"))
            Console.WriteLine("11. {0}", Convertion.ToBoolean("   123      "))
            Console.WriteLine("12. {0}", Convertion.ToDateTime("31.12.1980", "dd.MM.yyyy"))
            Console.WriteLine("13. {0}", Convertion.ToDateTime("12/31/1980", "MM/dd/yyyy"))
            Console.WriteLine("14. {0}", Convertion.ToDateTime("23:59:01"))
            Console.WriteLine("15. {0}", Convertion.ToDateTime(DBNull.Value))
            Console.WriteLine("16. {0}", Convertion.ToDateTime(DBNull.Value, DateTime.Now))
            Console.WriteLine("17. {0}", Convertion.ToBase16(16))
            Console.WriteLine("18. {0}", Convertion.FromBase16("10"))
            Console.WriteLine("19. {0}", Convertion.ToBase16(123123))
            Console.WriteLine("20. {0}", Convertion.FromBase16("AF01"))
            Console.WriteLine("21. {0}", Convertion.ToBase36(36))
            Console.WriteLine("22. {0}", Convertion.FromBase36("10"))
            Console.WriteLine("23. {0}", Convertion.ToBase36(123123))
            Console.WriteLine("24. {0}", Convertion.FromBase36("ZYR1"))
            Console.WriteLine("25. {0}", Convertion.ToBase62(62))
            Console.WriteLine("26. {0}", Convertion.FromBase62("10"))
            Console.WriteLine("27. {0}", Convertion.ToBase62(123123))
            Console.WriteLine("28. {0}", Convertion.FromBase62("Nemiro"))
            Console.WriteLine("29. {0}", Convertion.ToBase62(45102691578))
            Console.WriteLine("30. {0}", Convertion.ToTimeSpan("12:10:59"))
            Console.WriteLine("31. {0}", Convertion.ToTimeSpan(635456955015215351))
            </code>
            <code lang="plain">
            Results:
            1.  123
            2.  28
            3.  0
            4.  555
            5.  123.456
            6.  28.01
            7.  True
            8.  False
            9.  True
            10. False
            11. False
            12. 12/31/1980 00:00:00
            13. 12/31/1980 00:00:00
            14. 01/01/0001 23:59:01
            15. 01/01/0001 00:00:00
            16. 09/06/2014 18:05:12 (current date and time)
            17. 10
            18. 16
            19. 1e0f3
            20. 44801
            21. 10
            22. 36
            23. 2n03
            24. 1677997
            25. 10
            26. 62
            27. w1R
            28. 45102691578
            29. Nemiro
            30. 12:10:59
            31. 735482.14:05:01.5215351
            </code>
            </example>
        </member>
        <member name="M:Nemiro.Convertion.ToDouble(System.Object,System.Nullable{System.Double})">
            <summary>
            Converts the value of the specified object to an double-precision floating-point number.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDouble(System.Object,System.Double)">
            <summary>
            Converts the value of the specified object to an double-precision floating-point number.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDouble(System.Object)">
            <summary>
            Converts the value of the specified object to an double-precision floating-point number.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDecimal(System.Object,System.Nullable{System.Decimal})">
            <summary>
            Converts the value of the specified object to an equivalent decimal number.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDecimal(System.Object,System.Decimal)">
            <summary>
            Converts the value of the specified object to an equivalent decimal number.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDecimal(System.Object)">
            <summary>
            Converts the value of the specified object to an equivalent decimal number.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBase16(System.Int64,System.String)">
            <summary>
            Converts the value of the specified number to hexadecimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 16 characters. Default: <c>0123456789abcdef</c>.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToBase16(System.Int64)">
            <summary>
            Converts the value of the specified number to hexadecimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase16(System.String,System.String)">
            <summary>
            Converts the value in hexadecimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 16 characters. Default: <c>0123456789abcdef</c>.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase16(System.String)">
            <summary>
            Converts the value in hexadecimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToString(System.Object,System.String)">
            <summary>
            Converts the value of the specified object to a string.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value if the object contains no data.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToString(System.Object)">
            <summary>
            Converts the value of the specified object to a string.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object,System.Nullable{System.TimeSpan})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object,System.String,System.TimeSpan)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object,System.String)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object,System.TimeSpan)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToTimeSpan(System.Object)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBase36(System.Int64,System.String)">
            <summary>
            Converts the value of the specified number to hexatrigesimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 36 characters. Default: <c>0123456789abcdefghijklmnopqrstuvwxyz</c>.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToBase36(System.Int64)">
            <summary>
            Converts the value of the specified number to hexatrigesimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase36(System.String,System.String)">
            <summary>
            Converts the value in hexatrigesimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 36 characters. Default: <c>0123456789abcdefghijklmnopqrstuvwxyz</c>.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase36(System.String)">
            <summary>
            Converts the value in hexatrigesimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToBoolean(System.Object,System.Nullable{System.Boolean})">
            <summary>
            Converts the value of the specified object to an equivalent Boolean value.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Converts the value of the specified object to an equivalent Boolean value.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBoolean(System.Object)">
            <summary>
            Converts the value of the specified object to an equivalent Boolean value.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt16(System.Object,System.Nullable{System.UInt16})">
            <summary>
            Converts the value of the specified object to a 16-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt16(System.Object,System.UInt16)">
            <summary>
            Converts the value of the specified object to a 16-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt16(System.Object)">
            <summary>
            Converts the value of the specified object to a 16-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.Nullable{System.DateTime})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.Nullable{System.DateTime})">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String,System.String)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="timeSeparator">The string that separates the components of time, that is, the hour, minutes, and seconds.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String,System.DateTime)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.String)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="dateSeparator">The string that separates the components of a date, that is, the year, month, and day.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String,System.DateTime)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.String)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="formatDateTime">The format string for a date and time value.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object,System.DateTime)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToDateTime(System.Object)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt16(System.Object,System.Nullable{System.Int16})">
            <summary>
            Converts the value of the specified object to a 16-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt16(System.Object,System.Int16)">
            <summary>
            Converts the value of the specified object to a 16-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt16(System.Object)">
            <summary>
            Converts the value of the specified object to a 16-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToMoneyString(System.Object,System.Boolean)">
            <summary>
            Returns a string containing a number formatted as a currency amount. For example: 1 000.45
            </summary>
            <param name="value">The amount that you want to convert.</param>
            <param name="penny">Indicates should be considered a penny or not.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToMoneyString(System.Object)">
            <summary>
            Returns a string containing a number formatted as a currency amount without penny. For example: 1 000 000
            </summary>
            <param name="value">The amount that you want to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBase62(System.Int64,System.String)">
            <summary>
            Converts the value of the specified number to duosexagesimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 62 characters. Default: <c>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</c>.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToBase62(System.Int64)">
            <summary>
            Converts the value of the specified number to duosexagesimal format.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase62(System.String,System.String)">
            <summary>
            Converts the value in duosexagesimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion. At least 62 characters. Default: <c>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</c>.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBase62(System.String)">
            <summary>
            Converts the value in duosexagesimal format to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64)"/>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt32(System.Object,System.Nullable{System.UInt32})">
            <summary>
            Converts the value of the specified object to a 32-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt32(System.Object,System.UInt32)">
            <summary>
            Converts the value of the specified object to a 32-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt32(System.Object)">
            <summary>
            Converts the value of the specified object to a 32-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt64(System.Object,System.Nullable{System.UInt64})">
            <summary>
            Converts the value of the specified object to a 64-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt64(System.Object,System.UInt64)">
            <summary>
            Converts the value of the specified object to a 64-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToUInt64(System.Object)">
            <summary>
            Converts the value of the specified object to a 64-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToStringBuilder(System.Object,System.Text.StringBuilder)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value if the object contains no data.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToStringBuilder(System.Object)">
            <summary>
            Converts the value of the specified object to a <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt32(System.Object,System.Nullable{System.Int32})">
            <summary>
            Converts the value of the specified object to a 32-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt32(System.Object,System.Int32)">
            <summary>
            Converts the value of the specified object to a 32-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt32(System.Object)">
            <summary>
            Converts the value of the specified object to a 32-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt64(System.Object,System.Nullable{System.Int64})">
            <summary>
            Converts the value of the specified object to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt64(System.Object,System.Int64)">
            <summary>
            Converts the value of the specified object to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToInt64(System.Object)">
            <summary>
            Converts the value of the specified object to a 64-bit signed integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToByte(System.Object,System.Nullable{System.Byte})">
            <summary>
            Converts the value of the specified object to an 8-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToByte(System.Object,System.Byte)">
            <summary>
            Converts the value of the specified object to an 8-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="default">The default value is to be returned in the case of conversion errors.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToByte(System.Object)">
            <summary>
            Converts the value of the specified object to an 8-bit unsigned integer.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)">
            <summary>
            Converts a specified value to another number system.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion.</param>
            <seealso cref="M:Nemiro.Convertion.ToBase16(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase36(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBase62(System.Int64,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBaseX(System.String,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.FromBaseX(System.String,System.String)">
            <summary>
            Converts the specified value from the specified system to decimal.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="charset">Character set that will be used to format conversion.</param>
            <seealso cref="M:Nemiro.Convertion.FromBase16(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase36(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.FromBase62(System.String,System.String)"/>
            <seealso cref="M:Nemiro.Convertion.ToBaseX(System.Int64,System.String)"/>
        </member>
        <member name="M:Nemiro.Convertion.HasValue(System.Object)">
            <summary>
            Checks in the specified value has data or is empty.
            </summary>
            <param name="value">The value for checking.</param>
        </member>
        <member name="M:Nemiro.Convertion.GetNumber(System.Object)">
            <summary>
            Returns a string containing a number.
            </summary>
            <param name="value">The value for processing.</param>
        </member>
    </members>
</doc>
